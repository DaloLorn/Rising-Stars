Subsystem: StationHull
	Tags: DefaultUnlock, NoCore, HullSystem, Ability:ScuttleDerelict
	Hull: Station
	EvaluationOrder: -100

	HexLimit := 160
	BaseHexLimit := 160
	FreeHexLimit := 0

	GridWidth := 28
	GridHeight := 23

	Ship.ExternalHexes := 0
	Ship.HexSize := ShipSize / (HexLimit - FreeHexLimit)

	DummyForStR:=1000
	DummyForRepair:=4

	Repair := (ShipSize / HexLimit) * 8
	TechMult := 2
	FlingCostMult := 1

	HullStrengthMult := 1

	OnCheckErrors: designs::checkGlobalDesign

	Hex.LaborCost := 0.1 * 0.5 * ShipSize
	Hex.BuildCost := 1.1 * 0.75 * ShipSize
	Hex.MaintainCost := 2 * 0.25 * ShipSize^0.5

	Hex.Mass := 0
	AddPostModifier: AddMass(3.0 * ShipSize * (1.0 - max((ShipTotalHexes - Ship.ExternalHexes) / HexLimit, 0.0)))
	AddPostModifier: AddMass(if(HexSum.Mass < 0, HexSum.Mass * -1 + 0.01, 0))

	Assert: ShipTotalHexes - Ship.ExternalHexes < Sum.HexLimit + 0.001
		Message: #ERROR_HEX_COUNT

	Assert: Ship.Command > 0
		Message: #ERROR_NEED_CONTROL

	RequirePrayer := 0
	Assert: (RequirePrayer == 0) || (Sum.Prayer > 0)
		Message: #ERROR_NEED_PRAYER

	MaintenanceMod := 1.0
	RangeMod := 1.0
	StationHPMod := 1.0
	LaborMod := 1.0

	AddShipModifier: BuildCostFactor(0.75 * OrbitalBuildCostMult)
	AddShipModifier: !tag/StaticMaintenance::MaintCostFactor(0.2 * MaintenanceMod * OrbitalMaintMult)
	AddShipModifier: LaborCostFactor(0.3 * LaborMod * OrbitalLaborCostMult)
	AddShipModifier: SupportCapacityMult(0.33)
	AddShipModifier: HpMult(4.0 * StationHPMod)
	AddShipModifier: ShieldCapacityMult(4.0)
	AddShipModifier: RangeMult(2.0 * RangeMod)
	AddShipModifier: SpreadMult(0.5)
	AddShipModifier: MassMult(3.0)
	AddShipModifier: FireArcFactor(2.0)
	AddShipModifier: TrackingMult(2.0)

	Modifier: IncreaseHexLimit(Hexes)
		HexLimit := HexLimit + Hexes
		FreeHexLimit := FreeHexLimit + Hexes

	OrbitalBuildCostMult := 1
	OrbitalLaborCostMult := 1
	OrbitalMaintMult := 1

	BaseRaidRange := 5000 + 1.3 * pow(ShipSize, 3/5)/2

	BonusMitigation := 0
	MinShieldAbsorbRate := 0
	MaxShieldAbsorbRate := 0
	MitigationGrowthRate := 0
	MitigationDecayRate := 0
	MinimumMitigation := 0
	MaximumMitigation := 0

	AddPostModifier: CalculateMitigation()

	Modifier: CalculateMitigation()
		MinimumMitigation := if(Sum.ShieldCores, ((Sum.ShieldMitBase / Sum.ShieldCores) * (1 + Sum.HardenerMitigationFactor) + BonusMitigation) * 100, 0)
		MaximumMitigation := if(Sum.ShieldCores, (Sum.ShieldMitCap / Sum.ShieldCores + BonusMitigation) * 100, 0)
		MinShieldAbsorbRate := if(Sum.ShieldCores, Sum.ShieldRegen / (1 - ((Sum.ShieldMitBase / Sum.ShieldCores) * (1 + Sum.HardenerMitigationFactor) + BonusMitigation)), 0)
		MaxShieldAbsorbRate := if(Sum.ShieldCores, Sum.ShieldRegen / (1 - (Sum.ShieldMitCap / Sum.ShieldCores + BonusMitigation)), 0)
		MitigationGrowthRate := if(Sum.ShieldCores, (Sum.ShieldMitRate / Sum.ShieldCores) / (1 + Sum.HardenerMitigationFactor / 5) * 100, 0)
		MitigationDecayRate := if(Sum.ShieldCores, (Sum.ShieldMitDecay / Sum.ShieldCores) * 100, 0)