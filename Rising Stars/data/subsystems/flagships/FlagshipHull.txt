Subsystem: FlagshipHull
	Tags: DefaultUnlock, NoCore, HullSystem, Ability:ScuttleDerelict
	Hull: Flagship
	EvaluationOrder: -100

	HexLimit := 128
	FreeHexLimit := 0
	BaseHexLimit := 128

	GridWidth := 28
	GridHeight := 23
	TechMult := 1
	FlingCostMult := 1

	DummyForStR:=1000
	DummyForRepair:=4

	Ship.ExternalHexes := 0
	Ship.HexSize := ShipSize / (HexLimit - FreeHexLimit)

	HullStrengthMult := 1

	Repair := (ShipSize / HexLimit) * 8

	Hex.LaborCost := 0.1 * ShipSize
	Hex.BuildCost := 1.1 * ShipSize
	Hex.MaintainCost := 4 * ShipSize^0.5

	Hex.Mass := 0
	AddPostModifier: AddMass(ShipSize * (1.0 - min(max((ShipTotalHexes - Ship.ExternalHexes) / Sum.HexLimit, 0.0), 1.0)))
	AddPostModifier: AddMass(if(HexSum.Mass < 0, HexSum.Mass * -1 + 0.01, 0))

	OnCheckErrors: designs::checkGlobalDesign

	Assert: ShipTotalHexes - Ship.ExternalHexes < Sum.HexLimit + 0.001
		Message: #ERROR_HEX_COUNT

	Assert: Ship.Command > 0
		Message: #ERROR_NEED_CONTROL

	RequirePrayer := 0
	Assert: (Sum.RequirePrayer == 0) || (Sum.Prayer > 0)
		Message: #ERROR_NEED_PRAYER

	HasFTLCost := 0
	FTLBuildCost := 0
	FTLCostMultiplier := 1
	AddPostModifier: AddFTLBuildCost(if(HasFTLCost, ShipSize*0.65*FTLCostMultiplier, 0)))

	Modifier: FTLCostFactor(factor)
		FTLCostMultiplier := FTLCostMultiplier * factor

	Modifier: IncreaseHexLimit(Hexes)
		HexLimit := HexLimit + Hexes
		FreeHexLimit := FreeHexLimit + Hexes

	BaseRaidRange := 5000 + pow(ShipSize, 3/5)/2

	BonusMitigation := 0
	MinShieldAbsorbRate := 0
	MaxShieldAbsorbRate := 0
	MitigationGrowthRate := 0
	MitigationDecayRate := 0
	MinimumMitigation := 0
	MaximumMitigation := 0

	AddPostModifier: CalculateMitigation()

	Modifier: CalculateMitigation()
		MinimumMitigation := ((Sum.ShieldMitBase / Sum.ShieldCores) * (1 + Sum.HardenerMitigationFactor) + BonusMitigation) * 100
		MaximumMitigation := (Sum.ShieldMitCap / Sum.ShieldCores + BonusMitigation) * 100
		MinShieldAbsorbRate := Sum.ShieldRegen / (1 - ((Sum.ShieldMitBase / Sum.ShieldCores) * (1 + Sum.HardenerMitigationFactor) + BonusMitigation))
		MaxShieldAbsorbRate := Sum.ShieldRegen / (1 - (Sum.ShieldMitCap / Sum.ShieldCores + BonusMitigation))
		MitigationGrowthRate := (Sum.ShieldMitRate / Sum.ShieldCores) / (1 + Sum.HardenerMitigationFactor / 5) * 100
		MitigationDecayRate := (Sum.ShieldMitDecay / Sum.ShieldCores) * 100
