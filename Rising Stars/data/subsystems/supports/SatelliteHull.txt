Subsystem: SatelliteHull
	Name: Satellites
	Tags: DefaultUnlock, NoCore, HullSystem
	Tags: HeraldsDLC
	Tags: IsSupport

	Hull: Satellite
	EvaluationOrder: -100

	HexLimit := 70
	BaseHexLimit := 70
	FreeHexLimit := 0

	GridWidth := 21
	GridHeight := 17
	FlingCostMult := 1

	BaseTurnThrust = 0.5 * Size
	DummyForStR:=1000
	DummyForRepair:=4

	Ship.ExternalHexes := 0
	Ship.HexSize := ShipSize / (HexLimit - FreeHexLimit)

	Repair := (ShipSize / HexLimit) * 4
	TechMult := 1.5

	HullStrengthMult := 1

	Hex.LaborCost := 0.07 * ShipSize
	Hex.BuildCost := 0.75 * ShipSize

	AddShipModifier: BuildCostFactor(0.75)
	AddShipModifier: LaborCostFactor(0.5)
	AddShipModifier: tag/Weapon::RangeMult(2.0)
	AddShipModifier: tag/MissileBase::RangeMult(0.65)
	AddShipModifier: tag/MissileBase::DamageMult(0.65)
	AddShipModifier: tag/Weapon::DamageMult(1.5)
	AddShipModifier: HpMult(2.0)

	Hex.Mass := 0
	AddPostModifier: AddMass(ShipSize * (1.0 - max((ShipTotalHexes - Ship.ExternalHexes) / HexLimit, 0.0)))
	AddPostModifier: AddMass(if(HexSum.Mass < 0, HexSum.Mass * -1 + 0.01, 0))

	Assert: ShipTotalHexes - Ship.ExternalHexes < Sum.HexLimit + 0.001
		Message: #ERROR_HEX_COUNT

	OnCheckErrors: designs::checkGlobalDesign

	Assert: Ship.Command > 0
		Message: #ERROR_NEED_CONTROL

	Modifier: IncreaseHexLimit(Hexes)
		HexLimit := HexLimit + Hexes
		FreeHexLimit := FreeHexLimit + Hexes

	BonusMitigation := 0
	MinShieldAbsorbRate := 0
	MaxShieldAbsorbRate := 0
	MitigationGrowthRate := 0
	MitigationDecayRate := 0
	MinimumMitigation := 0
	MaximumMitigation := 0

	AddPostModifier: CalculateMitigation()

	Modifier: CalculateMitigation()
		MinimumMitigation := if(Sum.ShieldCores, ((Sum.ShieldMitBase / Sum.ShieldCores) * (1 + Sum.HardenerMitigationFactor) + BonusMitigation) * 100, 0)
		MaximumMitigation := if(Sum.ShieldCores, (Sum.ShieldMitCap / Sum.ShieldCores + BonusMitigation) * 100, 0)
		MinShieldAbsorbRate := if(Sum.ShieldCores, Sum.ShieldRegen / (1 - ((Sum.ShieldMitBase / Sum.ShieldCores) * (1 + Sum.HardenerMitigationFactor) + BonusMitigation)), 0)
		MaxShieldAbsorbRate := if(Sum.ShieldCores, Sum.ShieldRegen / (1 - (Sum.ShieldMitCap / Sum.ShieldCores + BonusMitigation)), 0)
		MitigationGrowthRate := if(Sum.ShieldCores, (Sum.ShieldMitRate / Sum.ShieldCores) / (1 + Sum.HardenerMitigationFactor / 5) * 100, 0)
		MitigationDecayRate := if(Sum.ShieldCores, (Sum.ShieldMitDecay / Sum.ShieldCores) * 100, 0)
